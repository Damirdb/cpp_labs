##include <iostream>
#include <fstream>
#include <string>

std::string saveGets(char* buffer, int n, std::ifstream& fp) {
    fp.getline(buffer, n);
    std::string res(buffer);
    if (!res.empty() && res.back() == '\n') {
        res.pop_back();
    } else {
        fp.clear(); 
    }
    return res;
}



struct Clubs {
    std::string name;
    std::string adress;
    std::string type;
    std::string open_time;
    std::string close_time;
};



void inputClub(Clubs* club) {
    std::cout << "Название -> ";
    std::getline(std::cin, club->name);
    std::cout << "Адрес -> ";
    std::getline(std::cin, club->adress);
    std::cout << "Время открытия -> ";
    std::getline(std::cin, club->open_time);
    std::cout << "Тип вечеринки -> ";
    std::getline(std::cin, club->type);
    std::cout << "Время закрытия -> ";
    std::getline(std::cin, club->close_time);
}

void printMenu() {
    std::cout << "1. Добавить запись\n";
    std::cout << "2. Удалить запись\n";
    std::cout << "3. Показать все записи\n";
    std::cout << "4. Показать назначение записей\n";
    std::cout << "0. Выход\n";
    std::cout << "-> ";
}


int addClub(Clubs* clubs, int n) {
    std::cout << "Ввод информации о клубе ";
    cin >> clubs[n];
    std::cout << "Добавлена запись\n";
    return n + 1;
}


int deleteBus(club* clubs, int n) {
    if (n == 0) {
        std::cout << "\nСписок автобусов пуст!\n\n";
        return n;
    }
    int index, i;

    printf("\nВходной номер удален (1, %d) -> ", n);
    scanf("%d", &index);
    --index;
    if (index < 0 || index >= n) {
        printf("Неправильный номер\n\n");
        return n;
    }

    for (i = index; i + 1 < n; ++i) {
        buses[i] = buses[i + 1];
    }
    printf("Запись удалена\n\n");
    return n - 1;
}


void printBuses(IntercityBus* buses, int n) {
    if (n == 0) {
        printf("\nСписок автобусов пуст!\n\n");
        return;
    }
    int i;
    printf("\nАвтобусы\n");
    printf("| %2s | %7s | %20s | %20s | %20s | %20s |\n",
           "#",
           "Номер",
           "Отправление",
           "Место назначения",
           "Время отправления",
           "Время прибытия"
    );
    for (i = 0; i < n; ++i) {
        printf("| %2d | %7d | %20s | %20s | %20s | %20s |\n",
               i + 1,
               buses[i].number,
               buses[i].departure,
               buses[i].destination,
               buses[i].departure_time,
               buses[i].arrival_time
        );
    }
    printf("\n");
}


void printByDestination(IntercityBus* buses, int n) {
    if (n == 0) {
        printf("\nСписок автобусов пуст!\n\n");
        return;
    }
    char destination[30];
    int i, cnt = 0;

    printf("\nПункт назначения -> ");
    saveGets(destination, 30, stdin);

    for (i = 0; i < n; ++i) {
        if (strcmp(destination, buses[i].destination) == 0) {
            break;
        }
    }
    if (i == n) {
        printf("Нет автобусов с пунктом назначения '%s'\n\n", destination);
        return;
    }
    printf("Автобусы\n");
    printf("| %2s | %7s | %20s | %20s | %20s | %20s |\n",
           "#", "Номер", "Отправление", "Место назначения",
           "Время отправления", "Время прибытия");
    for (; i < n; ++i) {
        if (strcmp(destination, buses[i].destination) != 0) {
            continue;
        }
        ++cnt;
        printf("| %2d | %7d | %20s | %20s | %20s | %20s |\n",
               cnt,
               buses[i].number,
               buses[i].departure,
               buses[i].destination,
               buses[i].departure_time,
               buses[i].arrival_time
        );
    }
    printf("\n");

}


int main() {
    IntercityBus buses[128];
    int nbuses = 0;

    int command;
    do {
        printMenu();
        scanf("%d", &command);
        fflush(stdin);

        switch(command) {
        case 1:
            nbuses = addBus(buses, nbuses);
            break;
        case 2:
            nbuses = deleteBus(buses, nbuses);
            break;
        case 3:
            printBuses(buses, nbuses);
            break;
        case 4:
            printByDestination(buses, nbuses);
            break;
        case 0:
            printf("\nДосвидание\n");
            break;
        default:
            printf("\nНеверная команда!\n\n");
            break;
        }

    } while (command != 0);

    return 0;
}
